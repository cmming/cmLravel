0. php artisan key:generate  

1.migration 使用说明

    php artisan make:migration create_tablename_table   (创建一个表格)

    php artisan migrate (执行migrations 文件夹里面 所有的 数据库迁移版本)

    php artisan tinker (用来直接模拟 modal对象的 的数据库操作)
        1.1  $post = new \App\Post();
             $post->title = '';
             $post->content = '';
             $post->user_id = '';

             $post->save();(保存) 或者修改

             $post->find(1);(根据 主键 进行搜索)

             $post::where("key","value")->first(); 找到第一个 数据

             $post::where("key","value")->first()->delete(); 找到第一个并且删除掉。

             factory(App\)


2.Auth 用户登录状态管理类


3.策略类 policy 

    php artisan make:policy PostPolicy


4.从文章模型中 关联 不同的 模型 （项目不断进行下去的思路）

    模型关联 6种
    1-1 belongsTo
    1-？ hasMany
    ？-？

    view 层 当跨越 了多级模型的时候 ，应该使用 模型预加载的 模式进行 预加载


    4.1 评论 模块的添加
        4.1.1 使用 migration 创建 一个 表 php artisan make:migration create_tablename_table

        4.1.2 使用 php artisan migrate 创建 表

        4.1.3 创建评论模块的模型 在评论模型中 进行关联 文章模型 ，在文章模型同样进行 关联 评论（belongsTo）

    4.2 点赞 模块
        4.2.1 使用 migration 创建一个表 php artisan make:migration create_zans_table

        4.2.2 使用 php artisan migrate 创建 表

        4.2.3 

    4.3 添加个人中心 粉丝模块 (关注和粉丝 功能)

        4.3.1 建表
        4.3.2 模型关联 

